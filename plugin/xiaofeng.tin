#class xiaofeng open
#var xf.requested 0;
#var xf.type -1;

#var xf.job.1 0;
#var xf.job.2 0;
#var xf.job.3 0;
#var xf.job.4 0;

#tab xf.start;
#tab xf.stop;

#alias {xf.watchdog.stop} {
    #undelay {xf_check_delay};
};

#alias {xf.watchdog.kick} {
    #delay {xf_check_delay} {
        xf.watchdog.kick;
        xf.restart;
    } {300};
};

#alias {xf.teardown} {
    #var quest nil;
    #undelay {xf_delay};
    #undelay {xf_fight_delay};
    #var xf.requested 0;
    #class xiaofeng.inner kill;
    #class xf.fight.inner kill;
    #class xf.bl.inner kill;
    bl.stop;
};

#alias {xf.go} {
    #if {"%1" == "杀"} {
        #var xf.type 1;
    };
    #elseif {"%1" == "擒"} {
        #var xf.type 2;
    };
    #elseif {"%1" == "劝"} {
        #var xf.type 3;
    };
    #elseif {"%1" == "降"} {
        #var xf.type 4;
    };
    #else {
        #var xf.type %1;
    };

    @setenv{xf_type;${xf.type}};
    @setenv{xf_state;STARTED};
    #var xf.position %2;
    xf.watchdog.kick;
    #var xf_slowdown 0;
    gt ${xf.position};
    on_there {
        xf.bl;
    };
    on_not_there {
        #var xf_fail_reason 房间不可达: ${xf.position};
        xf.f;
    };
};

#alias {xf.setup} {
    #var xf_fail_reason nil;
    bl.stop;
    #alias {xf_on_taopao} {
        #if {${xf.type} == 4} {
            #var xf_fail_reason 打不过, 跑;
            xf.b;
        };
        #else {
            on_health {
                xf.setup;
                xf.bl;
            };
        };
    };

    #class xiaofeng.inner open;
    #action {对你而言太重了。} {
        notify 身上物品太多, 无法 get;
    };

    #action {粱长老看到你闯进来，大喝一声：你不是丐帮弟子，给我滚出去！} {
        on_unbusy {
            xf.b;
        };
    };

    #action {蒙面杀手感到次招用意不在伤人，忙凝聚全身功力，却阻挡不住内力飞泄而出！} {
        #cr;
    } {2};
    #action {%*却阻挡不住内力飞泄而出！} {
        xf.watchdog.kick;
        xf.teardown;
        follow none;
        taopao {
            xf_on_taopao;
        };
    } {3};

    #action {看来该找机会逃跑了...} {
        xf.watchdog.kick;
        #if {${xf.type} == 4} {
            #var xf_fail_reason 打不过, 跑;
            xf.b;
        };
        #else {
            xf.teardown;
            on_health {
                xf.setup;
                xf.bl;
            };
        };
    };

    #action {眼见不活了。} {
        xf.watchdog.kick;
        #if {${xf.type} != 1} {
            #delay {xf_delay} {
                #var xf_fail_reason 失手打死: ${xf.type};
                xf.b;
            } {3};
        };
    };

    #action {你走上前去，试图劝服蒙面杀手，但蒙面杀手不耐烦的转了个身，不愿听你说下去。} {
        xf.watchdog.kick;
        #delay {xf_delay} {
            #if {${xf.type} == 3} {
                xf.setup;
                xf.bl;
            };
        } {3};
    };

    #action {我不服，等我休息一下，咱们再打过！} {
        xf.watchdog.kick;
        #delay {xf_delay} {
            #if {${xf.type} == 4} {
                #var xf_fail_reason 没有一次战胜;
                xf.b;
            };
        } {3};
    };

    #action {蒙面杀手说道：「此处比武多有不便，你且随我来！」} {
        xf.watchdog.kick;
        #delay {xf_delay} {
            xf.setup;
            xf.bl;
        } {3};
    };

    #action {蒙面杀手%*落荒而逃了。} {
        xf.watchdog.kick;
        #delay {xf_delay} {
            #if {${xf.type} == 4} {
                #var xf_fail_reason 没有一次战胜, 杀手跑了;
                xf.b;
            };
            #else {
                xf.setup;
                xf.bl;
            };
        } {3};
    };

    #action {你一眨眼间，蒙面杀手已经不知去向。} {
        xf.watchdog.kick;
        #delay {xf_delay} {
            #if {${xf.type} == 4} {
                #var xf_fail_reason 没有一次战胜, 杀手跑了;
                xf.b;
            };
            #else {
                xf.setup;
                xf.bl;
            };
        } {3};
    };

    #action {^    西夏一品堂 蒙面杀手(Mengmian shashou)} {
        #cr;
    } {2};

    #action {^    西夏一品堂 %*(%* %*)} {
        #var xf.real_name %%1;
        autopp.set ${xf.real_name};
        #var xf.real_first_name @lower{%%2};

        #if {${xf.type} == 2} {
            show_to_quest 萧峰: 擒回: ${xf.real_name};

            on_unbusy {
                get ${xf.real_first_name};
            };
        };
        #if {${xf.type} == 4} {
            show_to_quest 萧峰: 战胜: ${xf.real_name};
        };
    } {3};

    #action {{你|蒙面杀手}身行向后一跃，跳出战圈不打了。} {
        #if {"@getenv{xf_state}" != "STARTED"} {
            #return;
        };
        #if {${xf.type} == 3} {
            #delay {xf_delay} {
                quan;
            } {0.3};
        };
        #elseif {${xf.type} == 2} {
            xf.teardown;
            on_health {
                xf.setup;
                xf.bl;
            };
        };
    };
    #action {叫老子认输？嘿嘿，你别做梦了！} {
        #if {${xf.type} == 2} {
            #delay {xf_delay} {
                hit shashou;
            } {3};
        };
    };

    #action {^从%*身上掉了出来一颗%*{◎|☆|★}%*} {
        pack gem;
        gem.record %%2 %%3 %%4;
    };

    #action {%*向萧峰打听有关『%*』的消息} {
        #if {"%%1" == "你"} {
            #var xf.requested 1;
            #var quest xf;
        };
        #else {
            #var xf.requested 0;
        };
    };

    #action {传闻西夏一品堂派出了若干蒙面杀手，最近出现在%*附近的%*。} {
        #if {${xf.requested} == 1} {
            #var xf.target %%1:%%2;
            @setenv{xf_state;STARTED};
            #var xf.position %%1%%2;
            xf.watchdog.kick;
            #if {"${xy_info}" == "on" && "%%1" == "襄阳"} {
                #var xf_fail_reason 保卫期间: ${xf.target};
                xf.f;
            };
            #elseif {"%%1" == "岳王墓"} {
                #var xf_fail_reason 岳王墓;
                xf.f;
            };
            #else {
                gt ${xf.position};
                on_there {
                    xf.bl;
                };
                on_not_there {
                    #var xf_fail_reason 房间不可达: ${xf.position};
                    xf.f;
                };
            };
        };
    };

    #action {你去将他除掉，取其首级回来。} {
        #if {${xf.requested} == 1} {
            #var xf.type 1;
            #math xf.job.1 ${xf.job.1}+1;
            @setenv{xf_type;1};
            show_to_quest 萧峰: 杀死: ${xf.target};
        };
    };

    #action {你去将他擒回这里交给我} {
        #if {${xf.requested} == 1} {
            #var xf.type 2;
            #math xf.job.2 ${xf.job.2}+1;
            @setenv{xf_type;2};
            show_to_quest 萧峰: 擒回: ${xf.target};
        };
    };

    #action {尚可教化} {
        #if {${xf.requested} == 1} {
            #var xf.type 3;
            #math xf.job.3 ${xf.job.3}+1;
            @setenv{xf_type;3};
            show_to_quest 萧峰: 劝: ${xf.target};
        };
    };

    #action {让他认输就好} {
        #if {${xf.requested} == 1} {
            #var xf.type 4;
            #math xf.job.4 ${xf.job.4}+1;
            @setenv{xf_type;4};
            show_to_quest 萧峰: 战胜: ${xf.target};
        };
    };

    #action {『蒙面杀手(%*气血:%*\%/%*\%)』} {
        #undelay {xf_fight_delay};
        xf.watchdog.kick;
        #if {%%3 < 50 || %%4 < 50} {
            #var xf_slowdown 1;
        };
        #else {
            #var xf_slowdown 0;
        };
        #if {${xf.type} == 3} {
            #if {%%2 < 45 || %%3 < 45} {
                on_halt;
            };
        };
        #elseif {${xf.type} == 4} {
            #if {%%2 < 30 || %%3 < 30} {
                ask shashou about 认输;
            };
        };
    } {1};

    #action {看来杀手有点怕你了} {
        on_unbusy {
            on_halt {
                quan;
            };
        };
    };

    #action {你将%*扶了起来背在背上} {
        @setenv{xf_state;ENDED};
        #showme 收工;
        show_to_quest 萧峰: 已擒获 ${xf.real_name};
        on_truce {
            xf.b;
        };
    };

    #action {你捡起一颗%*的首级} {
        @setenv{xf_state;ENDED};
        #showme 收工;
        show_to_quest 萧峰: 已杀死;
        #delay {xf_delay} {
            xf.b;
        } {3};
    };

    #action {硬生生的将%*的头颅从尸体上扯了下来，提在手中！} {
        @setenv{xf_state;ENDED};
        #showme 收工;
        show_to_quest 萧峰: 已杀死;
        #delay {xf_delay} {
            xf.b;
        } {3};
    };

    #action {将血淋淋的首级提在手中} {
        @setenv{xf_state;ENDED};
        #showme 收工;
        show_to_quest 萧峰: 已杀死;
        #delay {xf_delay} {
            xf.b;
        } {3};
    };

    #action {血淋淋的首级咕噜噜的滚落在地} {
        on_unbusy {
            get shouji;
        };
        #delay {3} {
            get shouji;
        };
    };

    #action {显是蒙面杀手姓名} {
        @setenv{xf_state;BEATED};
        #class xf.fight.inner kill;
        #undelay {xf_delay};
        #if {${xf.type} == 1} {
            on_truce {
                zhan corpse;
            };
            #delay {3} {
                zhan corpse;
            };
        };
        #else {
            on_truce {
                #send {l};
            };
        };
    } {1};

    #action {蒙面杀手深深地叹了口气} {
        #unaction {『蒙面杀手(%*气血:%*\%/%*\%)』};
        #undelay {xf_delay};
        #if {${xf.type} == 3} {
            @setenv{xf_state;ENDED};
            #showme 收工;
            raw;
            show_to_quest 萧峰: 已经劝服;
            on_truce {
                xf.b;
            };
        };
        #elseif {${xf.type} == 4} {
            @setenv{xf_state;ENDED};
            #showme 收工;
            raw;
            show_to_quest 萧峰: 已经战胜;
            on_truce {
                xf.b;
            };
        };
    };

    #alias {xf.fight} {
        #class xf.bl.inner kill;
        detect_mingjiao shashou;
        #if {${xf.type} == 1} {
            on_unbusy {
                kill shashou;
            };
        };
        #elseif {${xf.type} == 2} {
            on_unbusy {
                hit shashou;
            };
        };
        #elseif {${xf.type} == 3} {
            #if {${xf_slowdown} == 1} {
                on_unbusy {
                    quan;
                };
            };

            on_unbusy {
                hit shashou;
            };
        };
        #elseif {${xf.type} == 4} {
            on_unbusy {
                fight shashou;
            };
        };
        #else {
            notify xf.type is wrong: ${xf.type};
        };
    };

    #alias {xf.check} {
        #delay {xf_fight_delay} {
            xf.bl;
        } {10};
        #class xf.fight.inner open;
        #action {蒙面杀手说道：「就你也配跟我讨教功夫？！」} {
            #undelay {xf_delay};
            #delay {xf.bl} {
                bl.next;
            } {1};
        };

        #action {要打便打} {
            #undelay {xf_delay};
            xf.watchdog.kick;
            #if {${xf.type} != -1} {
                follow shashou;
                xf.fight;
            };
        };

        #action {看起来蒙面杀手并不想跟你较量。} {
            xf.watchdog.kick;
            #delay {xf_delay} {
                #if {${xf.type} == 4} {
                    #var xf_fail_reason 没有一次战胜;
                    xf.b;
                };
            } {3};
        };

        #action {这里没有 shashou。} {
            #class xf.fight.inner kill;
            #delay {xf_delay} {
                xf.bl;
            } {1};
        };

        #action {这里没有这个人。} {
            #class xf.fight.inner kill;
            #delay {xf_delay} {
                xf.bl;
            } {1};
        };
        #class xf.fight.inner close;

        ask shashou about fight;
    };

    #class xiaofeng.inner close;
};

#alias {xf.restart} {
    xf.watchdog.stop;
    xf.teardown;
    #delay {xf_auto_delay} {
        on_health {
            xf.request;
        };
    } {10};
};

#alias {xf.start} {
    log.start;
    set_last_quest xf;
    #class xf.auto.inner open;

    #alias {on_huoyandao} {
        quit_and_restart;
    } {1};

    #alias {on_huoqiu} {
        quit_and_restart;
    } {1};

    #alias {on_special_state} {
        notify 特殊状态, 危险!;
        xf.teardown;

        #if {${xf.type} == 1 || {xf.type} == 2} {
            @setenv{xf_state;FAILED};
        };

        #if {"@getenv{xf_state}" != "ENDED"} {
            @setenv{xf_state;FAILED};
        };

        #alias {xf_check_for_special_state} {
            #if {${in_special_state} == 1} {
                on_health {
                    xf_check_for_special_state;
                };
            };
            #else {
                xf.start;
            };
        };
        chain taopao keyao xf_check_for_special_state;
    } {1};

    #alias {on_severe_wound} {
        chain keyao xf.restart;
    } {1};

    #var is_dead 0;
    #action {${char_name}被蒙面杀手杀死了。} {
        xf.watchdog.stop;
        #var is_dead 1;
    };

    #action {慢慢地你终于又有了知觉....} {
        #if {${is_dead} == 1} {
            notify 挂了;
            quit_and_restart;
        };
        #else {
            #delay {xf_delay} {
                #if {${xf.type} == 4} {
                    #var xf_fail_reason 晕了;
                    xf.b;
                };
                #else {
                    on_health {
                        xf.setup;
                        xf.bl;
                    };
                };
            } {3};
        };
    };

    #action {你的%*进步了！} {
        #cr;
    };

    #action {^%s%S点经验；} {
        show_to_info 萧峰任务(${xf.type}) 完成, @ctd{%%2} 点经验;
    } {1};

    #action {萧峰冷冷的盯着你道：「你以为如此弄虚作假能瞒得过我么？」} {
        xf.f;
    };


    #action {过%*再来问吧。} {
        #if {${xf.requested} == 1} {
            dz.idle {xf.q};
        };
    };

    #action {^萧峰说道：「你先忙完你的事情吧。」} {
        #if {${xf.requested} == 1} {
            dz.idle {xf.q};
        };
    } {1};

    #action {^萧峰(xiao feng)告诉你：你先去在江湖中历练一番吧。} {
        #if {${xf.requested} == 1} {
            dz.idle {xf.q};
        };
    } {1};

    #action {^萧峰(xiao feng)告诉你：你先下去休息休息吧。} {
        #if {${xf.requested} == 1} {
            dz.idle {xf.q};
        };
    } {1};

    #action {^萧峰说道：%*刚刚已经有人前去了} {
        #if {${xf.requested} == 1} {
            #delay {xf_auto_delay} {
                xf.q;
            } {3};
        };
    };
    #action {^由于放弃任务} {
        @setenv{xf_state;nil};
        show_to_info 萧峰任务(${xf.type})失败: ${xf_fail_reason};
        show_to_quest 萧峰: 失败;
        xf.restart;
    };
    #action {^你已经完成了} {
        @setenv{xf_state;nil};
        show_to_quest 萧峰: 完成;
        xf.restart;
    };
    #action {^萧峰说道：「你又没有任务，如何轻言放弃！」} {
        #if {${xf.requested} == 1} {
            @setenv{xf_state;nil};
            xf.restart;
        };
    };
    #class xf.auto.inner close;

    #var xf.type @getenv{xf_type};
    #if {"${xf.type}" == "nil"} {
        #var xf.type -1;
    };
    #if {${in_special_state} == 1} {
        on_special_state;
        #return;
    };
    drop_garbage;
    chain xf.p xf.request;
};

#alias {xf.request} {
    gt xf;
    on_there {
        xf.d;
        show_to_quest 萧峰: 准备;
        on_health {
            xf.q;
        };
    };
};

#alias {xf.stop} {
    xf.watchdog.stop;
    log.stop;
    unset_last_quest;
    health.cancel;
    #unaction {福米完成};
    #undelay {xf_auto_delay};
    #class xf.auto.inner kill;
    show_to_quest 萧峰: 结束;
    @clearenv{xf_type};
    @clearenv{xf_state};
};

#alias {xf.q} {
    #if {"${fm_remaining_time}" == "0"} {
        xf.stop;
        chain fullme xf.start;
    };
    #else {
        xf.setup;
        ask xiao feng about job;
    };
};

#alias {xf.d} {
    #if {"@getenv{xf_state}" == "ENDED"} {
        #if {${xf.type} == 1} {
            give shouji to xiao;
        };
        #if {${xf.type} == 2} {
            give ${xf.real_first_name} to xiao;
        };
        #if {${xf.type} == 3} {
            ask xiao feng about 完成;
        };
        #if {${xf.type} == 4} {
            ask xiao feng about 完成;
        };
    };
    xf.f;
};

#alias {xf.f} {
    ask xiao feng about fail;
};

#alias {xf.bl} {
    #class xf.bl.inner open;
    #action {GPS: 遍历完成} {
        #class xf.bl.inner kill;
        #delay {xf_delay} {
            #var xf_fail_reason 没有找到杀手 @ ${xf.position};
            #nop xf.b;
            notify ${xf_fail_reason};
        } {3};
    };

    #action {找到目标} {
        xf.check;
    };

    #action {^    西夏一品堂 蒙面杀手(Mengmian shashou)} {
        #if {${xf.type} != -1} {
            xf.check;
        };
    } {2};

    #class xf.bl.inner close;

    #class xf.fight.inner kill;
    #undelay {xf_fight_delay};

    #if {"@getenv{xf_state}" == "STARTED"} {
        xf.watchdog.kick;
        #if {${xf.type} == 3} {
            yun inspire;
        };
        on_unbusy {
            bl.start Mengmian;
        };
    };
    #else {
        #class xf.bl.inner kill;
    };
};

#alias {xf.b} {
    xf.teardown;
    on_unbusy {
        gt xf;
    };
    on_there {
        xf.d;
    };
};

#alias {xf.heal} {
    yun lifeheal shashou;
    l shashou;
};

#alias {xf.p} {
    #alias tmp_xf_p #cr;
    #alias tmp_xf_p %1;
    #var chain_action get.san get.qian sell.all gem.combine repair tmp_xf_p;
    #if {${need_reload} == 1} {
        #var chain_action reload ${chain_action};
    };
    chain ${chain_action};
};
#class xiaofeng close