#class war open;

#alias {re} {
    yun recover;
    yun regenerate;
};

#var heal_count 1;
#alias {heal} {
    re;
    #var heal_count %1;
    #loop {1} {${heal_count}} {tmp} {
        yun heal;
        yun inspire;
    };
};

#action {你对%*说道：%*领教%*高招！} {
    war;
};

#action {你对%*大喝一声：看招！} {
    war;
};

#action {看起来%1想杀死你} {
    war;
};

#action{「%1」%2(%3) <战斗中>} {
    show_to_info %1:%2:%3;
}

#alias {qi} {
    yun qi;
};

#alias {equip} {
    down;
    out;
    remove all;
    #foreach {${my_weapons}[%*]} {weapon} {draw ${weapon}};
    draw armor;
    draw head;
    draw cloth;
    draw surcoat;
    draw boots;
    wear all;
    wi;
    enter; up;
};

#action {你似乎十分疲惫，看来需要好好休息了} {re} {1};
#action {你气喘嘘嘘，看起来状况并不太好} {re} {1};
#action {你看起来已经力不从心了} {re} {1};

#list poisions create {
    你一中掌，身子一晃，看来已经中了毒！;
    你突然打了个寒战，明显感到一股寒流已经侵入体内！;
    忽然一阵刺骨的奇寒袭来;
    突然你打了个寒战，你中的冰魄寒毒发作了！;
    他的剧毒散至你的全身;
};
#foreach {${poisions}[%*]} {poision} {
    #action {${poision}} {
        qudu;
    } {1};
};

#action {你似乎十分疲惫，看来需要好好休息了} {
    re;
};

#alias {detect_mingjiao} {
    l %0;
    #action {这是一位明教} {
        mj.start;
    };

    #action {圣火令} {
        mj.start;
    };

    #delay {2} {
        #unaction {圣火令};
        #unaction {这是一位明教};
    };
};

#var mj_started 0;
#alias {mj.start} {
    #if {${mj_started} == 0} {
        #var mj_started 1;
        raw;
        war;
    };
};

#var mj_id {};
#alias {mj.stop} {
    #if {${mj_started} == 1} {
        #var mj_started 0;
        #var mj_id {};
    };
};

#alias {qudu} {
    eat san;
};

#alias {raw} {
    #var pfming 0;
    @stackcreate{pfm};
    #var fighting 0;
    #class war.inner kill;
    #class attack.inner kill;
    #undelay {attack.delay};
    attack.end;
    #var enemy nil;
    #var enemy_menpai nil;
    jiali none;
    #showme truce;
};

#alias {on_truce} {
    #alias tmp_truce %0;
    #class truce.inner open;
    #action {truce} {
        #class truce.inner kill;
        on_unbusy {
            tmp_truce;
        };
    };
    #class truce.inner close;
    war;
};

#action {${char_name}(damage:%*气血:%*)} {
    #if {${fighting} == 0} {
        war;
    };
};

#gag {wait_for_fight};
#var fighting 0;
#alias {war} {
    #var fighting 1;
    #class war.inner open;
    #action {你全身放松，坐下来开始运功疗伤。} {
        mj.stop;
        raw;
    };
    #ticker {fighting} {
        yun heal;
    } {2};
    #class war.inner close;
    attack;
};

#alias {attack.end} {#cr};

#action {乾坤大挪移自然激发而出，将你的攻势反击了回去。} {
    mj.start;
};

#action {^%*运起九阳神功} {
    mj.start;
    #showme mingjiao enemy:%1;
};

#alias {taopao} {
    set brief 2;
    #alias tmp_on_taopao #cr;
    #alias tmp_on_taopao %1;

    #alias {taopao_random_walk} {
        #list exits_list create ${exits_list};
        #list exits_list size tmp_exit_list_size;
        #var tmp_exit_index @random{${tmp_exit_list_size}};
        #list exits_list get  ${tmp_exit_index} exit;
        raw;
        #5 halt;
        ${exit};
    };

    #alias {get_pos_done} {
        #class taopao.inner open;
        #ticker {taopao_ticker} {
            taopao_random_walk;
        } {1};
        #action {这里%*出口} {
            #class taopao.inner kill;
            tmp_on_taopao;
        };
        #class taopao.inner close;
        taopao_random_walk;
    };
    get_pos {
        get_pos_done;
    };
};

#action {${char_name}%*不由自主的放开了兵器} {
    wi;
};

#var enemy nil;
#alias {perform} {
    #if {"${enemy}" == "nil"} {
        #send {perform %0};
    };
    #else {
        #send {perform %0 ${enemy}};
    };
};

#alias {disarm.start} {
    unwi;
    #alias {attack} {#cr};
    bei none;
};

#alias {disarm.stop} {
    reborn;
    wi;
};

#alias {busy.start} {
    #var busy_target %0;
    disarm.start;
    #send {hit ${busy_target}};
    #class busy.start.inner open;
    #action {你战胜了} {
        #send {hit ${busy_target}};
    };
    #ticker {busy} {
        chan;
    } {0.5};
    #class busy.start.inner close;
};

#alias {busy.stop} {
    #class busy.start.inner kill;
    disarm.stop;
};

#gag clear: done;
#alias {clear} {
    kill %0;
    #class clear.inner open;
    #action {^这里没有这个人} {
        #unaction {^这里没有这个人};
        #class clear.inner kill;
        raw;
        #showme clear: done;
    } {1};
    #ticker {kill} {
        kill %0;
    } {3};
    #class clear.inner close;
};

#alias {on_cleared} {
    #alias tmp_on_cleared %0;
    #action {clear: done} {
        #unaction {clear: done};
        #delay {3} {
            tmp_on_cleared;
        };
    };
};

#alias {xiongyong} {
    unwield all;
    do_wield sword;
    #send {jifa parry xuantie-jian};
    perform xuantie-jian.xiongyong;
    #send {jifa parry meinu-quan};
    unwield all;
    wi;
};

#alias {war.prepare} {
    yun qi;
    yun jing;
    #if {${youxiao_neigong} > 750} {
        yun shield;
    };
    attack.prepare;
};

#alias {kill} {
    war.prepare;
    #send kill %0;
};

#alias {killall} {
    war.prepare;
    #send killall %0;
};

#alias {hit} {
    war.prepare;
    #send hit %0;
};

#alias {fight} {
    war.prepare;
    #send fight %0;
};

#var huo_yan_dao 0;
#action {^你身上的%*被火焰刀所焚，象片片破布般飘落。} {
    #var huo_yan_dao 1;
};

#var pfming 0;
#alias {pfm.inner} {
    #var pfm_action @stackpoll{pfm};
    #if {"${pfm_action}" != "nil"} {
        #var pfming 1;
        on_unbusy {
            ${pfm_action};
            #var pfming 0;
            pfm.inner;
        };
    };
    #else {
        #var pfming 0;
    };
};

@stackcreate{pfm};
#alias {pfm} {
    #if {@stackismember{pfm;%1} == 0} {
        @stackpush{pfm;%1};
        #if {${pfming} == 0} {
            pfm.inner;        
        };
    };
};
#class war close;