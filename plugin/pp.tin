#class pp open;

#alias {pp.setup} {
    #class pp.inner open;
    @stackcreate{pp_target};
    @stackcreate{pp_caller};

    #var pp_ing 0;
    #alias {pp.not_found} {
        #if {"${pp_caller}" != "pass" && "${pp_caller}" != "nil"} {
            tell ${pp_caller} 【${pp_target}】我找不到,请看其他的回复;
        };
    };

    #action {【求助】%*(%*): find %*} {
        #var tmp_caller @lower{%%2};
        #var tmp_target %%3;

        #if {@stackismember{pp_caller;${tmp_caller}} == 1 || "${tmp_caller}" == "${pp_caller}"} {
            #return;
        };

        @stackpush{pp_target;{{${tmp_target}}}};
        @stackpush{pp_caller;${tmp_caller}};

        #if {${pp_ing} == 0} {
            pp.next;
        };
    };

    #action {{你费了半天的力气，就是感应不出|你费了半天劲，就是无法感应这个人在哪里}} {
        pp.not_found;
        pp.next;
    };

    #action {你的精力不够，无法感应别人的位置。} {
        pp.not_found;

        pp.stop;
        on_health {
            pp.start;
        };
    };

    #action {你说道：「删除对象【%*】【%*】」} {
        #cr;
    } {1};

    #action {「删除对象【%*】【%*】」} {
        #var caller %%1;
        #var target %%2;
        #list stack_pp_caller size stack_size;
        #loop {1} {&stack_pp_target[]} {pp_index} {
            #if {"${stack_pp_target}[${pp_index}]" == "${target}" && "${stack_pp_caller}[${pp_index}]" == "${caller}"} {
                #list stack_pp_target set ${pp_index} pass;
                #list stack_pp_caller set ${pp_index} pass;
            };
        };
        #if {"${pp_target}" == "${target}" && "${pp_caller}" == "${caller}"} {
            #var pp_target pass;
            #var pp_caller pass;
        };
    };

    #action {你掐指一算，感觉%*(%*)现在好象在%*一带活动。} {
        #if {"${pp_caller}" != "pass" && "${pp_caller}" != "nil"} {
            #if {"%%3" != "未知区域"} {
                say 删除对象【${pp_caller}】【${pp_target}】;
                tell ${pp_caller} 【%%1(%%2)】目前在【%%3】,快去摁死它吧!;
                show_to_info 你告诉 ${pp_caller}: 【%%1(%%2)】目前在【%%3】,快去摁死它吧!;
            };
            #else {
                pp.not_found;
            };
        };
        pp.next;
    };

    #action {现在没这个人。} {
        #if {"${pp_caller}" != "pass" && "${pp_caller}" != "nil"} {
            say 删除对象【${pp_caller}】【${pp_target}】;
            tell ${pp_caller} 【${pp_target}】并不存在;
        };
        pp.next;
    };

    #class pp.inner close;
};

#alias {pp.teardown} {
    #class pp.inner kill;
};

#alias {pp.action} {
    #if {"${pp_target}" == "pass" || "${pp_target}" == "nil"} {
        pp.next;
    };
    #else {
        perceive ${pp_target};
    };
};

#alias {pp.next} {
    #5 eat guo;
    #5 drink cha;
    #var pp_target @stackpop{pp_target};
    #var pp_caller @stackpop{pp_caller};
    #if {"${pp_target}" == "pass"} {
        pp.next;
        #return;
    };
    #elseif {"${pp_target}" != "nil"} {
        #var pp_ing 1;
        dz.cancel;
        tn.cancel;
        halt;

        #ticker {pp} {
            perceive ${pp_target};
        } {5};

        on_unbusy {
            pp.action;
        };
    };
    #else {
        #var pp_ing 0;
        #unticker {pp};
        pp.rest;
    };
};

#alias {pp.rest} {
    #5 eat guo;
    #5 drink cha;
    chain dz.rest tn.rest dz.full tn.full #cr;
};

#alias {pp.start} {
    set_last_quest pp;

    gt 洗象池边;
    on_there {
        pp.setup;
        show_to_quest finder 开始;
        pp.next;
    };
};

#alias {pp.stop} {
    unset_last_quest;
    pp.teardown;
    #unticker {pp};
    show_to_quest finder 结束;
};

#class pp close;