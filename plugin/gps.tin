#class gps open;
load gps_actions;

#alias gt gps.gt;

#var gps_path_index 0;
#var gps_path_size 0;

#alias {on_there} {
    #alias tmp_there #cr;
    #alias tmp_there %0;
    #action {GPS: 抵达目的地} {
        #unaction {GPS: 抵达目的地};
        on_unbusy {
            tmp_there;
        };
    };
};

#alias {on_not_there} {
    #alias tmp_not_there #cr;
    #alias tmp_not_there %0;
    #action {GPS: 目标房间不可达, 无法行走} {
        #unaction {GPS: 目标房间不可达, 无法行走};
        on_unbusy {
            tmp_not_there;
        };
    };
};

#action {^你的动作还没有完成，不能移动。} {
    GPS.CHECK;
};

#alias {GPS.CHECK} {
    #if {"${gps.run.mode}" == "NORMAL"} {
        #delay {gps_delay_check} {
            gt.stop;
            #var gps_stop 0;
            gps.gt.check;
        } {10};
    };
};

#alias {GPS.UNCHECK} {
    #if {"${gps.run.mode}" == "NORMAL"} {
        #undelay {gps_delay_check};
    };
};

#var gps_gt_check_count 0;
#alias {gps.gt.check} {
    #var gps.run.mode nil;
    #alias {gps_gt} {
        gps.gt ${dst_roomno};
    };
    #alias {gps_check_room_done} {
        #var src_roomno ${gps.roomno};
        #if {${src_roomno} == ${dst_roomno}} {
            #var gps_gt_check_count 0;
            #delay {1} {
                do_show {GPS: 抵达目的地};
            };
        };
        #else {
            #math gps_gt_check_count ${gps_gt_check_count}+1;
            #if {${gps_gt_check_count} >= 20} {
                #var gps_gt_check_count 0;
                #delay {1} {
                    do_show {GPS: 抵达目的地};
                };
            };
            #else {
                #if {${gps_stop} == 0} {
                    taopao {
                        gps_gt;
                    };
                };
            };
        };
    };
    gps.check_room {
        gps_check_room_done;
    };
};

#alias gt.stop gps.stop;
#alias {gps.stop} {
    #var gps_stop 1;
    #class gps.action.inner kill;
    GPS.UNCHECK;
    #undelay {there_delay};
    #undelay {gps_delay};
    #unticker {gps_ticker};
    set brief 2;
};

#alias {gps.gt} {
    #var gps_stop 0;
    #var gps_last_dest %1;
    #alias {gps_gt} {
        gps.gt ${gps_last_dest};
    };
    #alias {gps_check_room_done} {
        #var src_roomno ${gps.roomno};
        #if {${gps.roomno} == -1} {
            #delay {1} {
                do_show {GPS: 当前房间未记录, 无法行走};
                taopao {
                    gps_gt;
                };
            };
        };
        #else {
            #if {@isdigit{%1}} {
                #var dst_roomno %1;
            };
            #else {
                INVOKE gps.get_room %1;
                #var dst_roomno ${gps.roomno};
            };

            #if {${dst_roomno} == ${src_roomno}} {
                #delay {1} {
                    do_show {GPS: 抵达目的地};
                };
            };
            #else {
                #format {epoch_from} {%T};
                do_show {GPS: 正在寻路: ${src_roomno} -> ${dst_roomno}};
                gps.get_path ${src_roomno} ${dst_roomno};
                #format {epoch_to} {%T};
                do_show {GPS: 完成寻路, 耗时: @eval{$epoch_to-$epoch_from} 秒};
                pause_screen;
                #var gps_path_index 1;
                #list gps_path size gps_path_size;
                #if {${gps_path_size} == 0} {
                    #delay {1} {
                        do_show {GPS: 目标房间不可达, 无法行走};
                    };
                    on_there {
                        #cr;
                    };
                };
                #else {
                    #var gps.run.mode NORMAL;
                    set brief 1;
                    gps.run;
                };
            };
        };
    };
    gps.check_room {
        gps_check_room_done;
    };
};

#alias {gps.run} {
    #if {"${gps.run.mode}" == "NORMAL"} {
        GPS.CHECK;
    };
    #var is_break 0;
    #var accu 0;
    #while {${gps_path_index} <= ${gps_path_size}} {
        #if {${gps_stop} == 1} {
            #var is_break 1;
            #break;
        };
        #if {"${gps.run.mode}" == "NORMAL"} {
            #math accu ${accu}+1;
        };
        #list gps_path get ${gps_path_index} gps_next_step;
        #math gps_path_index ${gps_path_index}+1;
        ${gps_next_step};
        #if {@startwith{${gps_next_step};gps} == 1} {
            #var is_break 1;
            #break;
        };
        #elseif {"${gps.run.mode}" == "TRAVERSE"} {
            gps.delay 0.8;
            #var is_break 1;
            #break;
        };
        #elseif {"${gps.run.mode}" == "NORMAL" && ${accu} > 10} {
            gps.delay 0.5;
            #var is_break 1;
            #break;
        };
    };
    #if {${gps_path_index} > ${gps_path_size} && ${is_break} == 0} {
        GPS.UNCHECK;
        set brief 2;
        #delay {gps_delay} {
            #if {"${gps.run.mode}" == "NORMAL"} {
                gps.gt.check;
            };
            #elseif {"${gps.run.mode}" == "TRAVERSE"} {
                #var gps.run.mode nil;
                do_show {GPS: 遍历完成};
                #unaction {${gps_traverse_target}};
            };
        } {1};
    };
};

#alias bl.next gps.traverse.continue;
#alias bl.start gps.traverse;
#alias bl.stop gps.traverse.stop;

#var gps_stop 0;
#alias {gps.traverse.continue} {
    #action {${gps_traverse_target}} {
        #unaction {${gps_traverse_target}};
        do_show 找到目标: ${gps_traverse_target};
        gps.stop;
    } {1};

    #var gps_stop 0;
    #var gps.run.mode TRAVERSE;
    set brief 1;
    gps.run;
};

#alias {gps.traverse.stop} {
    #unaction {${gps_traverse_target}};
    gps.stop;
};

#alias {gps.traverse} {
    #unvar gps_traverse_target;
    #unvar gps_traverse_location;
    #var gps_stop 0;
    #var traverse_tmp %1;
    #replace traverse_tmp {@} {;};
    #list traverse_tmp_list create ${traverse_tmp};
    #list traverse_tmp_list size traverse_tmp_size;
    #var gps_traverse_target $traverse_tmp_list[1];
    #if {${traverse_tmp_size} == 2} {
        #var gps_traverse_location $traverse_tmp_list[2];
    };

    #action {${gps_traverse_target}} {
        #unaction {${gps_traverse_target}};
        do_show 找到目标: ${gps_traverse_target};
        gps.stop;
    } {1};

    #alias {gps_check_room_done} {
        #if {${gps.roomno} == -1} {
            #delay {gps_check_delay} {
                do_show {GPS: 当前房间未记录, 无法遍历};
                taopao {
                    gps.traverse ${traverse_tmp};
                };
            } {1};
        };
        #else {
            INVOKE gps.traverse ${gps.roomno} ${gps_traverse_location};
            #var gps_path_index 1;
            #list gps_path size gps_path_size;
            #var gps.run.mode TRAVERSE;
            set brief 1;
            gps.run;
        };
    };

    gps.check_room {
        gps_check_room_done;
    };
};

#alias {gps.get_path} {
    #nop about type: 1. gps.clear 2. gps.guohe 3. gps.delay 4. gps.zuoche 5. gps.goto_bt 6. gps.long_delay 7. shudong 8. 江河;
    #nop weight > 0: there is a weight;
    #nop weight = 0: there is no weight;
    #nop weight < 0: the path is disabled;

    #list weights_list create {
        @getenv{gps.weight.clear};
        @getenv{gps.weight.guohe};
        @getenv{gps.weight.delay};
        @getenv{gps.weight.zuoche};
        @getenv{gps.weight.bt};
        @getenv{gps.weight.long_delay};
        @getenv{gps.weight.shudong};
        @getenv{gps.weight.jianghe};
    };

    #while {1} {
        #list weights_list find nil tmp_get_path_index;
        #if {${tmp_get_path_index} != 0} {
            #list weights_list set ${tmp_get_path_index} 0;
        };
        #else {
            #break;
        };
    };

    #var weights tmp;
    #foreach {${weights_list}[%*]} {i} {
        #var weights ${weights},${i}
    };
    #replace weights {tmp,} {};
    INVOKE gps.get_path %1 %2 ${weights};
};

#nop operate db;

#macro {\e[24~} { #nop ];
    gps.check_link;
};

#alias {gps.check_room} {
    #alias tmp_check_room #cr;
    #alias tmp_check_room %1;
    #alias {get_pos_done} {
        INVOKE gps.check_room "${pos.area}" "${pos.room}" "${pos.desc}" "${pos.exits}";
        tmp_check_room;
    };
    get_area {
        get_pos {
            get_pos_done;
        };
    };
};

#alias {gps.insert_room} {
    #alias {get_pos_done} {
        INVOKE gps.insert_room "${pos.room}" "${pos.desc}" "${pos.exits}" "${pos.area}";
        gps.check_link;
    };
    get_area {
        get_pos {
            get_pos_done;
        };
    };
};

#alias {gps.update_room} {
    #var roomno 0;
    #var roomno %1;
    #alias {gps_check_room_done} {
        INVOKE gps.update_room ${roomno} "${pos.area}" "${pos.room}" "${pos.desc}" "${pos.exits}";
        gps.check_link;
    };
    gps.check_room {
        gps_check_room_done;
    };
};

#alias {gps.check_link} {
    #alias {gps_check_room_done} {
        #delay {1} {
            #show {GPS: ${pos.room}: ${gps.roomno}};
        };
        #if {${gps.roomno} == -1} {
            #delay {1} {
                #show {GPS: 房间未记录, 无法检查连接};
            };
        };
        #else {
            INVOKE gps.check_link ${gps.roomno};
        };
    };
    gps.check_room {
        gps_check_room_done;
    };
};

#alias {gps.insert_link} {
    #var target_room_no %1;
    #var direction %2;
    #var reverse_direction %3;
    #alias {gps_check_room_done} {
        #if {${gps.roomno} == -1} {
            #delay {1} {
                #show {GPS: 房间未记录, 无法插入连接};
            };
        };
        #else {
            INVOKE gps.insert_link ${gps.roomno} ${target_room_no} "${direction}" "${reverse_direction}"
            gps.check_link;
        };
    };
    gps.check_room {
        gps_check_room_done;
    };
};
#nop 归云遍历;
#nop 白驼草丛;
#nop 昆明客店内室;
#nop 建康北山路遍历;
#nop 福州密室房梁;
#nop 北京永安门;
#nop test all gps.clear;
#nop 长江黄河遍历;
#nop 桃花岛桃林;
#nop 嘉兴山洞;
#nop 古墓棺材;
#nop 古墓山洞;
#class gps close;